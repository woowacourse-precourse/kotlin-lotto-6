package lotto

import camp.nextstep.edu.missionutils.test.Assertions.assertRandomUniqueNumbersInRangeTest
import camp.nextstep.edu.missionutils.test.Assertions.assertSimpleTest
import camp.nextstep.edu.missionutils.test.NsTest
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class ApplicationTest : NsTest() {

    @Test
    fun `기능 테스트`() {
        assertRandomUniqueNumbersInRangeTest(
            {
                run("8000", "1,2,3,4,5,6", "7")
                assertThat(output()).contains(
                    "8개를 구매했습니다.",
                    "[8, 21, 23, 41, 42, 43]",
                    "[3, 5, 11, 16, 32, 38]",
                    "[7, 11, 16, 35, 36, 44]",
                    "[1, 8, 11, 31, 41, 42]",
                    "[13, 14, 16, 38, 42, 45]",
                    "[7, 11, 30, 40, 42, 43]",
                    "[2, 13, 22, 32, 38, 45]",
                    "[1, 3, 5, 14, 22, 45]",
                    "3개 일치 (5,000원) - 1개",
                    "4개 일치 (50,000원) - 0개",
                    "5개 일치 (1,500,000원) - 0개",
                    "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                    "6개 일치 (2,000,000,000원) - 0개",
                    "총 수익률은 62.5%입니다."
                )
            },
            listOf(8, 21, 23, 41, 42, 43),
            listOf(3, 5, 11, 16, 32, 38),
            listOf(7, 11, 16, 35, 36, 44),
            listOf(1, 8, 11, 31, 41, 42),
            listOf(13, 14, 16, 38, 42, 45),
            listOf(7, 11, 30, 40, 42, 43),
            listOf(2, 13, 22, 32, 38, 45),
            listOf(1, 3, 5, 14, 22, 45)
        )
    }

    @Test
    fun `기능 테스트 9개`() {
        assertRandomUniqueNumbersInRangeTest(
            {
                run("9000", "8,12,19,27,34,41", "13")
                assertThat(output()).contains(
                    "9개를 구매했습니다.",
                    // 6개 일치
                    "[8, 12, 19, 27, 34, 41]",
                    // 5개 일치, 보너스 볼 일치
                    "[8, 12, 13, 19, 27, 34]",
                    // 5개 일치, 보너스 볼 불일치
                    "[2, 8, 12, 19, 27, 41]",
                    "[4, 8, 12, 19, 27, 34]",
                    // 4개 일치 보너스 볼 일치
                    "[1, 8, 12, 13, 19, 41]",
                    // 4개 일치, 보너스 볼 불일치
                    "[1, 8, 10, 12, 19, 27]",
                    // 3개 일치, 보너스 볼 불일치
                    "[1, 8, 9, 12, 19, 20]",
                    // 2개 일치 보너스 볼 일치
                    "[1, 5, 13, 27, 34, 37]",
                    // 2개 일치, 보너스 볼 불일치
                    "[8, 10, 12, 21, 29, 39]",

                    "3개 일치 (5,000원) - 1개",
                    "4개 일치 (50,000원) - 2개",
                    "5개 일치 (1,500,000원) - 2개",
                    "5개 일치, 보너스 볼 일치 (30,000,000원) - 1개",
                    "6개 일치 (2,000,000,000원) - 1개",
                    "총 수익률은 22,590,055.6%입니다."
                )
            },
            listOf(8, 12, 19, 27, 34, 41),
            listOf(8, 12, 13, 19, 27, 34),
            listOf(2, 8, 12, 19, 27, 41),
            listOf(4, 8, 12, 19, 27, 34),
            listOf(1, 8, 12, 13, 19, 41),
            listOf(1, 8, 10, 12, 19, 27),
            listOf(1, 8, 9, 12, 19, 20),
            listOf(1, 5, 13, 27, 34, 37),
            listOf(8, 10, 12, 21, 29, 39),
        )
    }

    @Test
    fun `기능 테스트 15개`() {
        assertRandomUniqueNumbersInRangeTest(
            {
                run("15000", "9,2,5,15,20,45", "11")
                assertThat(output()).contains(
                    "15개를 구매했습니다.",
                    "[2, 5, 9, 15, 20, 45]",

                    "[2, 5, 9, 11, 15, 20]",
                    "[2, 5, 9, 11, 15, 45]",

                    "[2, 4, 5, 9, 15, 45]",
                    "[2, 3, 5, 9, 15, 20]",

                    "[1, 2, 5, 9, 11, 45]",
                    "[1, 2, 3, 5, 9, 15]",

                    "[2, 5, 11, 20, 41, 42]",
                    "[1, 2, 4, 5, 7, 9]",

                    "[1, 3, 11, 15, 20, 41]",
                    "[2, 3, 5, 14, 22, 42]",

                    "[11, 12, 13, 14, 15, 16]",
                    "[12, 13, 14, 15, 17, 18]",

                    "[11, 12, 13, 14, 16, 17]",
                    "[10, 12, 13, 14, 16, 17]",

                    "3개 일치 (5,000원) - 2개",
                    "4개 일치 (50,000원) - 2개",
                    "5개 일치 (1,500,000원) - 2개",
                    "5개 일치, 보너스 볼 일치 (30,000,000원) - 2개",
                    "6개 일치 (2,000,000,000원) - 1개",
                    "총 수익률은 13,754,066.7%입니다."
                )
            },
            listOf(2, 5, 9, 15, 20, 45),   //6개일치

            listOf(2, 5, 9, 15, 20, 11), //5개일치,보너스 일치
            listOf(2, 5, 9, 15, 45, 11),

            listOf(2, 5, 9, 15, 45, 4), //5개일치, 보너스 불일치
            listOf(2, 5, 9, 15, 20, 3),


            listOf(1, 2, 5, 9, 11, 45),  //4개일치 보너스 일치
            listOf(1, 2, 3, 5, 9, 15),  //4개일치,보너스 불일치


            listOf(2, 5, 11, 20, 41, 42), //3개일치 보너스 일치
            listOf(1, 2, 4, 5, 7, 9),   //3개일치 보너스 불일치


            listOf(1, 3, 11, 15, 20, 41),  //2개일치 보너스 일치
            listOf(2, 3, 5, 14, 22, 42),  //2개일치 보너스 불일치


            listOf(11, 12, 13, 14, 15, 16), //1개일치 보너스 일치
            listOf(12, 13, 14, 15, 17, 18), //1개일치 보너스 불일치


            listOf(11, 12, 13, 14, 16, 17), //0개일치 보너스 일치
            listOf(10, 12, 13, 14, 16, 17), //0개일치 보너스 불일치
        )
    }

    @Test
    fun `기능 테스트 - 수익률 0프로`() {
        assertRandomUniqueNumbersInRangeTest(
            {
                run("9000", "1,2,3,4,5,6", "7")
                assertThat(output()).contains(
                    "9개를 구매했습니다.",
                    "[8, 12, 19, 27, 34, 41]",
                    "[8, 12, 13, 19, 27, 34]",
                    "[2, 8, 12, 19, 27, 41]",
                    "[4, 8, 12, 19, 27, 34]",
                    "[1, 8, 12, 13, 19, 41]",
                    "[1, 8, 10, 12, 19, 27]",
                    "[1, 8, 9, 12, 19, 20]",
                    "[1, 5, 13, 27, 34, 37]",
                    "[8, 10, 12, 21, 29, 39]",
                    "3개 일치 (5,000원) - 0개",
                    "4개 일치 (50,000원) - 0개",
                    "5개 일치 (1,500,000원) - 0개",
                    "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                    "6개 일치 (2,000,000,000원) - 0개",
                    "총 수익률은 0.0%입니다."
                )
            },
            listOf(8, 12, 19, 27, 34, 41),
            listOf(8, 12, 13, 19, 27, 34),
            listOf(2, 8, 12, 19, 27, 41),
            listOf(4, 8, 12, 19, 27, 34),
            listOf(1, 8, 12, 13, 19, 41),
            listOf(1, 8, 10, 12, 19, 27),
            listOf(1, 8, 9, 12, 19, 20),
            listOf(1, 5, 13, 27, 34, 37),
            listOf(8, 10, 12, 21, 29, 39),
        )
    }

    @Test
    fun `예외 테스트`() {
        assertSimpleTest {
            runException("1000j")
            assertThat(output()).contains(ERROR_MESSAGE)
        }
    }

    override fun runMain() {
        main()
    }

    companion object {
        private const val ERROR_MESSAGE = "[ERROR]"
    }
}
