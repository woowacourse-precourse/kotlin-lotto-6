package lotto

import camp.nextstep.edu.missionutils.test.Assertions.assertRandomUniqueNumbersInRangeTest
import camp.nextstep.edu.missionutils.test.Assertions.assertSimpleTest
import camp.nextstep.edu.missionutils.test.NsTest
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class PrintResultsTest : NsTest() {

    @Test
    fun `기능 테스트_3개 일치`() {
        assertRandomUniqueNumbersInRangeTest(
                {
                    run("8000", "1,2,3,4,5,6", "7")
                    assertThat(output()).contains(
                            "8개를 구매했습니다.",
                            "[8, 21, 23, 41, 42, 43]",
                            "[3, 5, 11, 16, 32, 38]",
                            "[7, 11, 16, 35, 36, 44]",
                            "[1, 8, 11, 31, 41, 42]",
                            "[13, 14, 16, 38, 42, 45]",
                            "[7, 11, 30, 40, 42, 43]",
                            "[2, 13, 22, 32, 38, 45]",
                            "[1, 3, 5, 14, 22, 45]",
                            "3개 일치 (5,000원) - 1개",
                            "4개 일치 (50,000원) - 0개",
                            "5개 일치 (1,500,000원) - 0개",
                            "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                            "6개 일치 (2,000,000,000원) - 0개",
                            "총 수익률은 62.5%입니다."
                    )
                },
                listOf(8, 21, 23, 41, 42, 43),
                listOf(3, 5, 11, 16, 32, 38),
                listOf(7, 11, 16, 35, 36, 44),
                listOf(1, 8, 11, 31, 41, 42),
                listOf(13, 14, 16, 38, 42, 45),
                listOf(7, 11, 30, 40, 42, 43),
                listOf(2, 13, 22, 32, 38, 45),
                listOf(1, 3, 5, 14, 22, 45)
        )
    }

    @Test
    fun `기능 테스트_4개 일치`() {
        assertRandomUniqueNumbersInRangeTest(
                {
                    run("5000", "1,4,11,28,30,35", "36")
                    assertThat(output()).contains(
                            "5개를 구매했습니다.",
                            "[1, 7, 15, 19, 23, 34]",
                            "[13, 19, 21, 27, 36, 44]",
                            "[4, 11, 28, 33, 36, 45]",
                            "[7, 11, 22, 26, 32, 36]",
                            "[2, 6, 15, 34, 38, 42]",
                            "3개 일치 (5,000원) - 0개",
                            "4개 일치 (50,000원) - 1개",
                            "5개 일치 (1,500,000원) - 0개",
                            "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                            "6개 일치 (2,000,000,000원) - 0개",
                            "총 수익률은 1000.0%입니다."
                    )
                },
                listOf(1, 7, 15, 19, 23, 34),
                listOf(13, 19, 21, 27, 36, 44),
                listOf(4, 11, 28, 33, 36, 45),
                listOf(7, 11, 22, 26, 32, 36),
                listOf(2, 6, 15, 34, 38, 42),
        )
    }

    @Test
    fun `기능 테스트_5개 일치`() {
        assertRandomUniqueNumbersInRangeTest(
                {
                    run("7000", "1,8,10,18,2,3", "45")
                    assertThat(output()).contains(
                            "7개를 구매했습니다.",
                            "[1, 22, 33, 35, 36, 42]",
                            "[1, 8, 10, 18, 31, 45]",
                            "[6, 20, 31, 34, 37, 42]",
                            "[2, 6, 8, 11, 15, 28]",
                            "[7, 17, 20, 29, 39, 40]",
                            "[4, 12, 13, 32, 35, 36]",
                            "[5, 9, 11, 30, 35, 42]",
                            "3개 일치 (5,000원) - 0개",
                            "4개 일치 (50,000원) - 0개",
                            "5개 일치 (1,500,000원) - 1개",
                            "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                            "6개 일치 (2,000,000,000원) - 0개",
                            "총 수익률은 21428.6%입니다."
                    )
                },
                listOf(1, 22, 33, 35, 36, 42),
                listOf(1, 8, 10, 18, 31, 45),
                listOf(6, 20, 31, 34, 37, 42),
                listOf(2, 6, 8, 11, 15, 28),
                listOf(7, 17, 20, 29, 39, 40),
                listOf(4, 12, 13, 32, 35, 36),
                listOf(5, 9, 11, 30, 35, 42)
        )
    }

    @Test
    fun `기능 테스트_5개 일치(보너스_볼_일치)`() {
        assertRandomUniqueNumbersInRangeTest(
                {
                    run("10000", "7,16,24,32,35,40", "36")
                    assertThat(output()).contains(
                            "10개를 구매했습니다.",
                            "[9, 16, 21, 23, 24, 31]",
                            "[9, 11, 12, 13, 27, 37]",
                            "[3, 18, 21, 25, 29, 36]",
                            "[5, 18, 23, 31, 33, 45]",
                            "[6, 8, 23, 32, 34, 45]",
                            "[7, 9, 20, 26, 39, 42]",
                            "[9, 31, 38, 43, 44, 45]",
                            "[7, 16, 24, 32, 35, 36]",
                            "[2, 7, 10, 30, 34, 40]",
                            "[2, 3, 11, 36, 39, 40]",
                            "3개 일치 (5,000원) - 0개",
                            "4개 일치 (50,000원) - 0개",
                            "5개 일치 (1,500,000원) - 0개",
                            "5개 일치, 보너스 볼 일치 (30,000,000원) - 1개",
                            "6개 일치 (2,000,000,000원) - 0개",
                            "총 수익률은 300000.0%입니다."
                    )
                },
                listOf(9, 16, 21, 23, 24, 31),
                listOf(9, 11, 12, 13, 27, 37),
                listOf(3, 18, 21, 25, 29, 36),
                listOf(5, 18, 23, 31, 33, 45),
                listOf(6, 8, 23, 32, 34, 45),
                listOf(7, 9, 20, 26, 39, 42),
                listOf(9, 31, 38, 43, 44, 45),
                listOf(7, 16, 24, 32, 35, 36),
                listOf(2, 7, 10, 30, 34, 40),
                listOf(2, 3, 11, 36, 39, 40)
        )
    }

    @Test
    fun `기능 테스트_6개 일치`() {
        assertRandomUniqueNumbersInRangeTest(
                {
                    run("5000", "12,20,34,36,42,43", "1")
                    assertThat(output()).contains(
                            "5개를 구매했습니다.",
                            "[3, 11, 12, 13, 32, 36]",
                            "[4, 7, 21, 34, 35, 38]",
                            "[12, 20, 34, 36, 42, 43]",
                            "[6, 9, 11, 15, 19, 40]",
                            "[12, 17, 21, 28, 35, 37]",
                            "3개 일치 (5,000원) - 0개",
                            "4개 일치 (50,000원) - 0개",
                            "5개 일치 (1,500,000원) - 0개",
                            "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                            "6개 일치 (2,000,000,000원) - 1개",
                            "총 수익률은 40000000.0%입니다."
                    )
                },
                listOf(3, 11, 12, 13, 32, 36),
                listOf(4, 7, 21, 34, 35, 38),
                listOf(12, 20, 34, 36, 42, 43),
                listOf(6, 9, 11, 15, 19, 40),
                listOf(12, 17, 21, 28, 35, 37)
        )
    }

    @Test
    fun `여러개 일치`() {
        assertRandomUniqueNumbersInRangeTest(
                {
                    run("6000", "31,41,29,5,2,10", "39")
                    assertThat(output()).contains(
                            "6개를 구매했습니다.",
                            "[2, 5, 8, 29, 31, 41]",
                            "[10, 12, 29, 31, 39, 41]",
                            "[22, 26, 30, 33, 36, 43]",
                            "[5, 12, 17, 25, 31, 39]",
                            "[1, 7, 15, 18, 34, 41]",
                            "[4, 10, 22, 35, 38, 45]",
                            "3개 일치 (5,000원) - 1개",
                            "4개 일치 (50,000원) - 0개",
                            "5개 일치 (1,500,000원) - 2개",
                            "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                            "6개 일치 (2,000,000,000원) - 0개",
                            "총 수익률은 50083.3%입니다."
                    )
                },
                listOf(2, 5, 8, 29, 31, 41),
                listOf(10, 12, 29, 31, 39, 41),
                listOf(22, 26, 30, 33, 36, 43),
                listOf(5, 12, 17, 25, 31, 39),
                listOf(1, 7, 15, 18, 34, 41),
                listOf(4, 10, 22, 35, 38, 45)
        )
    }

    @Test
    fun `일치하지 않음`() {
        assertRandomUniqueNumbersInRangeTest(
                {
                    run("5000", "1,2,3,4,5,6", "7")
                    assertThat(output()).contains(
                            "5개를 구매했습니다.",
                            "[13, 16, 21, 23, 24, 42]",
                            "[1, 14, 18, 20, 27, 36]",
                            "[7, 9, 25, 28, 31, 37]",
                            "[10, 20, 27, 28, 33, 42]",
                            "[1, 2, 14, 29, 35, 36]",
                            "3개 일치 (5,000원) - 0개",
                            "4개 일치 (50,000원) - 0개",
                            "5개 일치 (1,500,000원) - 0개",
                            "5개 일치, 보너스 볼 일치 (30,000,000원) - 0개",
                            "6개 일치 (2,000,000,000원) - 0개",
                            "총 수익률은 0.0%입니다."
                    )
                },
                listOf(13, 16, 21, 23, 24, 42),
                listOf(1, 14, 18, 20, 27, 36),
                listOf(7, 9, 25, 28, 31, 37),
                listOf(10, 20, 27, 28, 33, 42),
                listOf(1, 2, 14, 29, 35, 36)
        )
    }

    override fun runMain() {
        main()
    }

    companion object {
        private const val ERROR_MESSAGE = "[ERROR]"
    }
}
